{"version":3,"sources":["index.js"],"names":["extend","OrbitControls","query","queryString","parseUrl","window","location","href","containsQueryString","string","Object","keys","findIndex","v","toUpperCase","queryStringColor","color","startsWith","queryStringColorOnOver","colorOnOver","CandleA","lazy","CandleB","CandleC","CandleD","CandleE","Scene","useThree","camera","size","domElement","gl","invalidate","controls","useRef","useMemo","zoom","height","materials","material","THREE","specular","shininess","flatShading","materialOnOver","useFrame","current","update","useEffect","addEventListener","removeEventListener","position","fallback","ref","args","enableDamping","ReactDOM","render","colorManagement","orthographic","fov","pixelRatio","devicePixelRatio","document","getElementById"],"mappings":"qJAAA,yFAQAA,YAAO,CAAEC,oB,MAEDC,EAAUC,IAAYC,SAASC,OAAOC,SAASC,MAA/CL,MAEFM,EAAuBC,GACpBC,OAAOC,KAAKT,GAAOU,UAAWC,GAAMA,EAAEC,gBAAkBL,EAAOK,gBAAkB,EAEpFC,EACCb,EAAMc,MACJd,EAAMc,MAAMC,WAAW,KAAOf,EAAMc,MAAQ,IAAMd,EAAMc,MADtC,KAIrBE,EACChB,EAAMiB,YACJjB,EAAMiB,YAAYF,WAAW,KAAOf,EAAMiB,YAAc,IAAMjB,EAAMiB,YAD5C,KAI3BC,EAAUC,eAAK,IAAM,oDACrBC,EAAUD,eAAK,IAAM,oDACrBE,EAAUF,eAAK,IAAM,oDACrBG,EAAUH,eAAK,IAAM,oDACrBI,EAAUJ,eAAK,IAAM,oDAErBK,EAAQ,KAAO,MAAD,EAMdC,cAJFC,EAFgB,EAEhBA,OACAC,EAHgB,EAGhBA,KACMC,EAJU,EAIhBC,GAAMD,WACNE,EALgB,EAKhBA,WAEIC,EAAWC,mBAEjBC,kBAAQ,KACNP,EAAOQ,KAAOP,EAAKQ,OAAS,GAC3B,CAACR,IAEJ,MAAMS,EAAYH,kBAAQ,MACxBI,SAAU,IAAIC,oBAAwB,CAAExB,MAAOD,GAAoB,UAAW0B,SAAU,WAAYC,UAAW,GAAIC,aAAa,IAChIC,eAAgB,IAAIJ,oBAAwB,CAAExB,MAAOE,GAA0B,UAAWuB,SAAU,WAAYC,UAAW,GAAIC,aAAa,OAgB9I,OAbAE,YAAS,4BAAMZ,EAASa,eAAf,aAAM,EAAkBC,WACjCC,oBAAU,KACRf,EAASa,QAAQG,iBAAiB,SAAUjB,GACrC,IAAMC,EAASa,QAAQI,oBAAoB,SAAUlB,IAC3D,CAACC,EAASa,UAUX,oCACE,uCACA,+BAAWK,SAAU,CAAC,GAAI,GAAI,MAC9B,gCAAYA,SAAU,EAAE,IAAK,IAAK,IAAKnC,MAAM,WAC5CR,EAAoB,YACnB,kBAAC,WAAD,CAAU4C,SAAU,MAClB,kBAAChC,EAAYkB,IAGhB9B,EAAoB,YACnB,kBAAC,WAAD,CAAU4C,SAAU,MAClB,kBAAC9B,EAAYgB,IAGhB9B,EAAoB,YACnB,kBAAC,WAAD,CAAU4C,SAAU,MAClB,kBAAC7B,EAAYe,IAGhB9B,EAAoB,YACnB,kBAAC,WAAD,CAAU4C,SAAU,MAClB,kBAAC5B,EAAYc,IAGhB9B,EAAoB,YACnB,kBAAC,WAAD,CAAU4C,SAAU,MAClB,kBAAC3B,EAAYa,IAGjB,mCAAee,IAAKpB,EAAUqB,KAAM,CAAC1B,EAAQE,GAAayB,eAAa,MAK7EC,IAASC,OACP,kBAAC,IAAD,CACEC,iBAAe,EACfC,cAAY,EACZ/B,OAAQ,CAAEuB,SAAU,CAAC,EAAG,EAAG,GAAGf,KAAM,IAAKwB,IAAK,IAC9CC,WAAYxD,OAAOyD,kBAAoB,GAEvC,kBAACpC,EAAD,OAEFqC,SAASC,eAAe,U","file":"static/js/main.8d0fc92f.chunk.js","sourcesContent":["import * as THREE from 'three'\nimport ReactDOM from 'react-dom'\nimport React, { Suspense, lazy, useMemo, useRef, useEffect } from 'react'\nimport { Canvas, useFrame, useThree, extend } from 'react-three-fiber'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport queryString from 'query-string'\nimport './styles.css'\n\nextend({ OrbitControls })\n\nconst { query } = queryString.parseUrl(window.location.href)\n\nconst containsQueryString = (string) => {\n  return Object.keys(query).findIndex((v) => v.toUpperCase() === string.toUpperCase()) > -1\n}\nconst queryStringColor = (function () {\n  if (!query.color) return null\n  return query.color.startsWith('#') ? query.color : '#' + query.color\n})()\n\nconst queryStringColorOnOver = (function () {\n  if (!query.colorOnOver) return null\n  return query.colorOnOver.startsWith('#') ? query.colorOnOver : '#' + query.colorOnOver\n})()\n\nconst CandleA = lazy(() => import('./models/candleA'))\nconst CandleB = lazy(() => import('./models/candleB'))\nconst CandleC = lazy(() => import('./models/candleC'))\nconst CandleD = lazy(() => import('./models/candleD'))\nconst CandleE = lazy(() => import('./models/candleE'))\n\nconst Scene = () => {\n  const { \n    camera,\n    size,\n    gl: { domElement },\n    invalidate\n  } = useThree()\n  const controls = useRef()\n\n  useMemo(() => {\n    camera.zoom = size.height / 4\n  }, [size])\n\n  const materials = useMemo(() => ({\n    material: new THREE.MeshPhongMaterial({ color: queryStringColor || '#E18C46', specular: '#F111111', shininess: 30, flatShading: true }),\n    materialOnOver: new THREE.MeshPhongMaterial({ color: queryStringColorOnOver || '#E8A772', specular: '#F111111', shininess: 30, flatShading: true })\n  }))\n\n  useFrame(() => controls.current?.update())\n  useEffect(() => {\n    controls.current.addEventListener('change', invalidate)\n    return () => controls.current.removeEventListener('change', invalidate)\n  }, [controls.current])\n\n  // useFrame(() => {\n  //   const MAX_ZOOM = 300\n  //   if (camera.zoom > MAX_ZOOM) {\n  //     camera.zoom = camera.zoom - (camera.zoom - MAX_ZOOM) * 0.075\n  //   }\n  // })\n\n  return (\n    <>\n      <ambientLight />\n      <spotLight position={[10, 10, 10]} />\n      <pointLight position={[-10, -10, -10]} color=\"orange\" />\n      {containsQueryString('candleA') && (\n        <Suspense fallback={null}>\n          <CandleA {...materials} />\n        </Suspense>\n      )}\n      {containsQueryString('candleB') && (\n        <Suspense fallback={null}>\n          <CandleB {...materials} />\n        </Suspense>\n      )}\n      {containsQueryString('candleC') && (\n        <Suspense fallback={null}>\n          <CandleC {...materials} />\n        </Suspense>\n      )}\n      {containsQueryString('candleD') && (\n        <Suspense fallback={null}>\n          <CandleD {...materials} />\n        </Suspense>\n      )}\n      {containsQueryString('candleE') && (\n        <Suspense fallback={null}>\n          <CandleE {...materials} />\n        </Suspense>\n      )}\n      <orbitControls ref={controls} args={[camera, domElement]} enableDamping/>\n    </>\n  )\n}\n\nReactDOM.render(\n  <Canvas\n    colorManagement\n    orthographic\n    camera={{ position: [0, 2, 5],zoom: 200, fov: 50 }}\n    pixelRatio={window.devicePixelRatio || 1}\n  >\n    <Scene />\n  </Canvas>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}