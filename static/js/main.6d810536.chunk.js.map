{"version":3,"sources":["index.js"],"names":["query","queryString","parseUrl","window","location","href","containsQueryString","string","Object","keys","findIndex","v","toUpperCase","queryStringColor","color","startsWith","CandleA","lazy","CandleB","CandleC","Scene","camera","useThree","useFrame","zoom","position","fallback","material","THREE","specular","shininess","flatShading","ReactDOM","render","colorManagement","orthographic","fov","pixelRatio","devicePixelRatio","document","getElementById"],"mappings":"0KAAA,yF,MAQOA,EAASC,IAAYC,SAASC,OAAOC,SAASC,MAA9CL,MAEDM,EAAuBC,GACpBC,OAAOC,KAAKT,GAAOU,UACxBC,GAAKA,EAAEC,gBAAkBL,EAAOK,gBAC7B,EAEDC,EACCb,EAAMc,MACJd,EAAMc,MAAMC,WAAW,KAC5Bf,EAAMc,MAEN,IAAMd,EAAMc,MAJW,KAOrBE,EAAUC,eAAK,IAAM,oDACrBC,EAAUD,eAAK,IAAM,oDACrBE,EAAUF,eAAK,IAAM,oDAErBG,EAAQ,KAAO,MAEjBC,EACEC,cADFD,OAUF,OAPAE,YAAS,KAEHF,EAAOG,KADM,MAEfH,EAAOG,KAAOH,EAAOG,KAAkC,MAA1BH,EAAOG,KAFrB,QAOjB,oCACE,uCACA,+BAAWC,SAAU,CAAC,GAAI,GAAI,MAC9B,gCAAYA,SAAU,EAAE,IAAK,IAAK,IAAKX,MAAM,WAC5CR,EAAoB,YACnB,kBAAC,WAAD,CAAUoB,SAAU,MAChB,kBAACV,EAAD,CACEW,SAAU,IAAIC,oBAAwB,CAAEd,MAAOD,GAAoB,UAAWgB,SAAU,WAAYC,UAAW,GAAIC,aAAa,OAIvIzB,EAAoB,YACnB,kBAAC,WAAD,CAAUoB,SAAU,MAChB,kBAACR,EAAD,CACES,SAAU,IAAIC,oBAAwB,CAAEd,MAAOD,GAAoB,UAAWgB,SAAU,WAAYC,UAAW,GAAIC,aAAa,OAIvIzB,EAAoB,YACnB,kBAAC,WAAD,CAAUoB,SAAU,MAChB,kBAACP,EAAD,CACEQ,SAAU,IAAIC,oBAAwB,CAAEd,MAAOD,GAAoB,UAAWgB,SAAU,WAAYC,UAAW,GAAIC,aAAa,OAIxI,kBAAC,IAAD,QAKNC,IAASC,OACP,kBAAC,IAAD,CACEC,iBAAe,EACfC,cAAY,EACZd,OAAQ,CAAEI,SAAU,CAAC,EAAG,EAAG,GAAID,KAAM,IAAKY,IAAK,IAC/CC,WAAYlC,OAAOmC,kBAEnB,kBAAClB,EAAD,OAEFmB,SAASC,eAAe,W","file":"static/js/main.6d810536.chunk.js","sourcesContent":["import * as THREE from 'three'\nimport ReactDOM from 'react-dom'\nimport React, { Suspense, lazy } from 'react'\nimport { Canvas, useFrame, useThree } from 'react-three-fiber'\nimport { OrbitControls } from 'drei'\nimport queryString from 'query-string'\nimport './styles.css'\n\nconst {query} = queryString.parseUrl(window.location.href)\n\nconst containsQueryString = (string) => {\n  return Object.keys(query).findIndex(\n    v => v.toUpperCase() === string.toUpperCase()\n  ) > -1\n}\nconst queryStringColor = function(){\n  if (!query.color) return null\n  return query.color.startsWith('#') ?\n    query.color\n    :\n    '#' + query.color\n}()\n\nconst CandleA = lazy(() => import('./models/candleA'))\nconst CandleB = lazy(() => import('./models/candleB'))\nconst CandleC = lazy(() => import('./models/candleC'))\n\nconst Scene = () => {\n  const {\n    camera\n  } = useThree()\n\n  useFrame(() => {\n    const MAX_ZOOM = 300\n    if (camera.zoom > MAX_ZOOM) {\n      camera.zoom = camera.zoom - (camera.zoom - MAX_ZOOM) * 0.075\n    }\n  })\n\n  return (\n    <>\n      <ambientLight />\n      <spotLight position={[10, 10, 10]} />\n      <pointLight position={[-10, -10, -10]} color=\"orange\" />\n      {containsQueryString('candleA') &&\n        <Suspense fallback={null}>\n            <CandleA\n              material={new THREE.MeshPhongMaterial({ color: queryStringColor || '#E18C46', specular: '#F111111', shininess: 30, flatShading: true })}\n            />\n        </Suspense>\n      }\n      {containsQueryString('candleB') &&\n        <Suspense fallback={null}>\n            <CandleB\n              material={new THREE.MeshPhongMaterial({ color: queryStringColor || '#E18C46', specular: '#F111111', shininess: 30, flatShading: true })}\n            />\n        </Suspense>\n      }\n      {containsQueryString('candleC') &&\n        <Suspense fallback={null}>\n            <CandleC\n              material={new THREE.MeshPhongMaterial({ color: queryStringColor || '#E18C46', specular: '#F111111', shininess: 30, flatShading: true })}\n            />\n        </Suspense>\n      }\n      <OrbitControls />\n    </>\n  )\n}\n\nReactDOM.render(\n  <Canvas\n    colorManagement\n    orthographic\n    camera={{ position: [0, 2, 5], zoom: 250, fov: 50 }}\n    pixelRatio={window.devicePixelRatio}\n  >\n    <Scene />\n  </Canvas>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}